// Code generated by protoc-gen-go. DO NOT EDIT.
// source: book.proto

package book

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Ping                 int64    `protobuf:"varint,1,opt,name=ping,proto3" json:"ping,omitempty"`
	Year                 int64    `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
	Month                int64    `protobuf:"varint,3,opt,name=month,proto3" json:"month,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetPing() int64 {
	if m != nil {
		return m.Ping
	}
	return 0
}

func (m *Request) GetYear() int64 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Request) GetMonth() int64 {
	if m != nil {
		return m.Month
	}
	return 0
}

type Reply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{1}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *Reply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UsernameReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsernameReq) Reset()         { *m = UsernameReq{} }
func (m *UsernameReq) String() string { return proto.CompactTextString(m) }
func (*UsernameReq) ProtoMessage()    {}
func (*UsernameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{2}
}

func (m *UsernameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsernameReq.Unmarshal(m, b)
}
func (m *UsernameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsernameReq.Marshal(b, m, deterministic)
}
func (m *UsernameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsernameReq.Merge(m, src)
}
func (m *UsernameReq) XXX_Size() int {
	return xxx_messageInfo_UsernameReq.Size(m)
}
func (m *UsernameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UsernameReq.DiscardUnknown(m)
}

var xxx_messageInfo_UsernameReq proto.InternalMessageInfo

func (m *UsernameReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type BookBasicInfoReply struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Image                string   `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	StorageTime          string   `protobuf:"bytes,5,opt,name=storage_time,json=storageTime,proto3" json:"storage_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookBasicInfoReply) Reset()         { *m = BookBasicInfoReply{} }
func (m *BookBasicInfoReply) String() string { return proto.CompactTextString(m) }
func (*BookBasicInfoReply) ProtoMessage()    {}
func (*BookBasicInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{3}
}

func (m *BookBasicInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookBasicInfoReply.Unmarshal(m, b)
}
func (m *BookBasicInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookBasicInfoReply.Marshal(b, m, deterministic)
}
func (m *BookBasicInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookBasicInfoReply.Merge(m, src)
}
func (m *BookBasicInfoReply) XXX_Size() int {
	return xxx_messageInfo_BookBasicInfoReply.Size(m)
}
func (m *BookBasicInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BookBasicInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_BookBasicInfoReply proto.InternalMessageInfo

func (m *BookBasicInfoReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BookBasicInfoReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BookBasicInfoReply) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *BookBasicInfoReply) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *BookBasicInfoReply) GetStorageTime() string {
	if m != nil {
		return m.StorageTime
	}
	return ""
}

type BooksBasicInfoReply struct {
	BooksBasicInfo       []*BookBasicInfoReply `protobuf:"bytes,1,rep,name=booksBasicInfo,proto3" json:"booksBasicInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BooksBasicInfoReply) Reset()         { *m = BooksBasicInfoReply{} }
func (m *BooksBasicInfoReply) String() string { return proto.CompactTextString(m) }
func (*BooksBasicInfoReply) ProtoMessage()    {}
func (*BooksBasicInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{4}
}

func (m *BooksBasicInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooksBasicInfoReply.Unmarshal(m, b)
}
func (m *BooksBasicInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooksBasicInfoReply.Marshal(b, m, deterministic)
}
func (m *BooksBasicInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooksBasicInfoReply.Merge(m, src)
}
func (m *BooksBasicInfoReply) XXX_Size() int {
	return xxx_messageInfo_BooksBasicInfoReply.Size(m)
}
func (m *BooksBasicInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BooksBasicInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_BooksBasicInfoReply proto.InternalMessageInfo

func (m *BooksBasicInfoReply) GetBooksBasicInfo() []*BookBasicInfoReply {
	if m != nil {
		return m.BooksBasicInfo
	}
	return nil
}

type BookBasicInfoReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Image                string   `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	StorageTime          string   `protobuf:"bytes,5,opt,name=storage_time,json=storageTime,proto3" json:"storage_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookBasicInfoReq) Reset()         { *m = BookBasicInfoReq{} }
func (m *BookBasicInfoReq) String() string { return proto.CompactTextString(m) }
func (*BookBasicInfoReq) ProtoMessage()    {}
func (*BookBasicInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{5}
}

func (m *BookBasicInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookBasicInfoReq.Unmarshal(m, b)
}
func (m *BookBasicInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookBasicInfoReq.Marshal(b, m, deterministic)
}
func (m *BookBasicInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookBasicInfoReq.Merge(m, src)
}
func (m *BookBasicInfoReq) XXX_Size() int {
	return xxx_messageInfo_BookBasicInfoReq.Size(m)
}
func (m *BookBasicInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BookBasicInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_BookBasicInfoReq proto.InternalMessageInfo

func (m *BookBasicInfoReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BookBasicInfoReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BookBasicInfoReq) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *BookBasicInfoReq) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *BookBasicInfoReq) GetStorageTime() string {
	if m != nil {
		return m.StorageTime
	}
	return ""
}

type BookContentReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BookId               int64    `protobuf:"varint,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	ChapterNum           int64    `protobuf:"varint,3,opt,name=chapter_num,json=chapterNum,proto3" json:"chapter_num,omitempty"`
	ChapterName          string   `protobuf:"bytes,4,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	ChapterContent       string   `protobuf:"bytes,5,opt,name=chapter_content,json=chapterContent,proto3" json:"chapter_content,omitempty"`
	CreateTime           string   `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookContentReq) Reset()         { *m = BookContentReq{} }
func (m *BookContentReq) String() string { return proto.CompactTextString(m) }
func (*BookContentReq) ProtoMessage()    {}
func (*BookContentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{6}
}

func (m *BookContentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookContentReq.Unmarshal(m, b)
}
func (m *BookContentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookContentReq.Marshal(b, m, deterministic)
}
func (m *BookContentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookContentReq.Merge(m, src)
}
func (m *BookContentReq) XXX_Size() int {
	return xxx_messageInfo_BookContentReq.Size(m)
}
func (m *BookContentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BookContentReq.DiscardUnknown(m)
}

var xxx_messageInfo_BookContentReq proto.InternalMessageInfo

func (m *BookContentReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BookContentReq) GetBookId() int64 {
	if m != nil {
		return m.BookId
	}
	return 0
}

func (m *BookContentReq) GetChapterNum() int64 {
	if m != nil {
		return m.ChapterNum
	}
	return 0
}

func (m *BookContentReq) GetChapterName() string {
	if m != nil {
		return m.ChapterName
	}
	return ""
}

func (m *BookContentReq) GetChapterContent() string {
	if m != nil {
		return m.ChapterContent
	}
	return ""
}

func (m *BookContentReq) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

type BookContentReply struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BookId               int64    `protobuf:"varint,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	ChapterNum           int64    `protobuf:"varint,3,opt,name=chapter_num,json=chapterNum,proto3" json:"chapter_num,omitempty"`
	ChapterName          string   `protobuf:"bytes,4,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	ChapterContent       string   `protobuf:"bytes,5,opt,name=chapter_content,json=chapterContent,proto3" json:"chapter_content,omitempty"`
	CreateTime           string   `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookContentReply) Reset()         { *m = BookContentReply{} }
func (m *BookContentReply) String() string { return proto.CompactTextString(m) }
func (*BookContentReply) ProtoMessage()    {}
func (*BookContentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{7}
}

func (m *BookContentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookContentReply.Unmarshal(m, b)
}
func (m *BookContentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookContentReply.Marshal(b, m, deterministic)
}
func (m *BookContentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookContentReply.Merge(m, src)
}
func (m *BookContentReply) XXX_Size() int {
	return xxx_messageInfo_BookContentReply.Size(m)
}
func (m *BookContentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BookContentReply.DiscardUnknown(m)
}

var xxx_messageInfo_BookContentReply proto.InternalMessageInfo

func (m *BookContentReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BookContentReply) GetBookId() int64 {
	if m != nil {
		return m.BookId
	}
	return 0
}

func (m *BookContentReply) GetChapterNum() int64 {
	if m != nil {
		return m.ChapterNum
	}
	return 0
}

func (m *BookContentReply) GetChapterName() string {
	if m != nil {
		return m.ChapterName
	}
	return ""
}

func (m *BookContentReply) GetChapterContent() string {
	if m != nil {
		return m.ChapterContent
	}
	return ""
}

func (m *BookContentReply) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

type BookContentsReply struct {
	BookContentsReply    []*BookContentReply `protobuf:"bytes,1,rep,name=book_contents_reply,json=bookContentsReply,proto3" json:"book_contents_reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BookContentsReply) Reset()         { *m = BookContentsReply{} }
func (m *BookContentsReply) String() string { return proto.CompactTextString(m) }
func (*BookContentsReply) ProtoMessage()    {}
func (*BookContentsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{8}
}

func (m *BookContentsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookContentsReply.Unmarshal(m, b)
}
func (m *BookContentsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookContentsReply.Marshal(b, m, deterministic)
}
func (m *BookContentsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookContentsReply.Merge(m, src)
}
func (m *BookContentsReply) XXX_Size() int {
	return xxx_messageInfo_BookContentsReply.Size(m)
}
func (m *BookContentsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BookContentsReply.DiscardUnknown(m)
}

var xxx_messageInfo_BookContentsReply proto.InternalMessageInfo

func (m *BookContentsReply) GetBookContentsReply() []*BookContentReply {
	if m != nil {
		return m.BookContentsReply
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "book.Request")
	proto.RegisterType((*Reply)(nil), "book.Reply")
	proto.RegisterType((*UsernameReq)(nil), "book.UsernameReq")
	proto.RegisterType((*BookBasicInfoReply)(nil), "book.BookBasicInfoReply")
	proto.RegisterType((*BooksBasicInfoReply)(nil), "book.BooksBasicInfoReply")
	proto.RegisterType((*BookBasicInfoReq)(nil), "book.BookBasicInfoReq")
	proto.RegisterType((*BookContentReq)(nil), "book.BookContentReq")
	proto.RegisterType((*BookContentReply)(nil), "book.BookContentReply")
	proto.RegisterType((*BookContentsReply)(nil), "book.BookContentsReply")
}

func init() { proto.RegisterFile("book.proto", fileDescriptor_1e89d0eaa98dc5d8) }

var fileDescriptor_1e89d0eaa98dc5d8 = []byte{
	// 604 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0xf3, 0xd9, 0x4c, 0x4a, 0x4a, 0x36, 0x55, 0xea, 0x86, 0x03, 0xc5, 0x97, 0x96, 0x4b,
	0xa5, 0x16, 0xa9, 0xe2, 0x48, 0x1d, 0x28, 0x44, 0x2a, 0x45, 0x32, 0x54, 0x95, 0xe0, 0x10, 0x39,
	0xf1, 0x90, 0x58, 0x89, 0xbd, 0x89, 0xbd, 0x39, 0xf8, 0x17, 0x20, 0x7e, 0x19, 0xe2, 0x4f, 0x21,
	0xb4, 0xb3, 0xeb, 0x24, 0x75, 0x1d, 0x44, 0x4e, 0x88, 0xdb, 0xce, 0xec, 0xbc, 0xb7, 0xef, 0xcd,
	0xce, 0xda, 0x00, 0x03, 0xce, 0x27, 0xa7, 0xb3, 0x88, 0x0b, 0xce, 0x4a, 0x72, 0x6d, 0xbd, 0x85,
	0xaa, 0x83, 0xf3, 0x05, 0xc6, 0x82, 0x31, 0x28, 0xcd, 0xfc, 0x70, 0x64, 0x1a, 0x47, 0xc6, 0x49,
	0xd1, 0xa1, 0xb5, 0xcc, 0x25, 0xe8, 0x46, 0x66, 0x41, 0xe5, 0xe4, 0x9a, 0xed, 0x43, 0x39, 0xe0,
	0xa1, 0x18, 0x9b, 0x45, 0x4a, 0xaa, 0xc0, 0x3a, 0x83, 0xb2, 0x83, 0xb3, 0x69, 0xc2, 0x1a, 0x50,
	0xe0, 0x13, 0x22, 0xd9, 0x71, 0x0a, 0x7c, 0xc2, 0x4c, 0xa8, 0x06, 0x18, 0xc7, 0xee, 0x08, 0x89,
	0xa5, 0xe6, 0xa4, 0xa1, 0xf5, 0x1c, 0xea, 0xb7, 0x31, 0x46, 0xa1, 0x1b, 0xa0, 0x83, 0x73, 0xd6,
	0x81, 0x9d, 0x85, 0x0e, 0x09, 0x5e, 0x73, 0x96, 0xb1, 0xf5, 0xdd, 0x00, 0x66, 0x73, 0x3e, 0xb1,
	0xdd, 0xd8, 0x1f, 0xf6, 0xc2, 0xaf, 0x7c, 0x79, 0x96, 0xef, 0x69, 0xc1, 0x05, 0xdf, 0x93, 0x72,
	0x09, 0xae, 0x0e, 0xa2, 0x35, 0x6b, 0x43, 0xc5, 0x5d, 0x88, 0x31, 0x8f, 0x48, 0x6f, 0xcd, 0xd1,
	0x91, 0xb4, 0xe1, 0x07, 0x52, 0x55, 0x89, 0xd2, 0x2a, 0x60, 0xcf, 0x60, 0x37, 0x16, 0x3c, 0x72,
	0x47, 0xd8, 0x17, 0x7e, 0x80, 0x66, 0x99, 0x36, 0xeb, 0x3a, 0xf7, 0xc9, 0x0f, 0xd0, 0xba, 0x83,
	0x96, 0x94, 0x12, 0x67, 0xb4, 0xbc, 0x82, 0xc6, 0xe0, 0x5e, 0xda, 0x34, 0x8e, 0x8a, 0x27, 0xf5,
	0x73, 0xf3, 0x94, 0x9a, 0xfe, 0x50, 0xbd, 0x93, 0xa9, 0xb7, 0xbe, 0x19, 0xf0, 0x38, 0x53, 0x36,
	0xff, 0x37, 0x16, 0x7f, 0x18, 0xd0, 0x90, 0x4a, 0xba, 0x3c, 0x14, 0x18, 0x8a, 0x3c, 0x1d, 0x07,
	0x50, 0x95, 0xf2, 0xfb, 0xbe, 0xa7, 0x87, 0xa3, 0x22, 0xc3, 0x9e, 0xc7, 0x9e, 0x42, 0x7d, 0x38,
	0x76, 0x67, 0x02, 0xa3, 0x7e, 0xb8, 0x08, 0xf4, 0x90, 0x80, 0x4e, 0xdd, 0x2c, 0x02, 0x79, 0xfe,
	0xb2, 0x40, 0x3a, 0x51, 0xe2, 0x52, 0xd0, 0x8d, 0x34, 0x74, 0x0c, 0x7b, 0x69, 0xc9, 0x50, 0x49,
	0xd0, 0x2a, 0x1b, 0x3a, 0xad, 0x85, 0xd1, 0x61, 0x11, 0xba, 0x42, 0x5b, 0xa9, 0x50, 0x11, 0xa8,
	0x14, 0x39, 0xf9, 0xa9, 0x7b, 0xba, 0x74, 0x92, 0x37, 0x36, 0xff, 0x89, 0x97, 0x2f, 0xd0, 0x5c,
	0xb3, 0x12, 0x2b, 0x2f, 0x57, 0xd0, 0x22, 0xed, 0x9a, 0x3b, 0xee, 0x47, 0x32, 0xad, 0x67, 0xaf,
	0xbd, 0x9a, 0xbd, 0xf5, 0x06, 0x38, 0xcd, 0x41, 0x96, 0xe7, 0xfc, 0x57, 0x19, 0x4a, 0xb2, 0x8e,
	0xbd, 0x81, 0xc3, 0x2b, 0x3f, 0xf4, 0x2e, 0xa7, 0x53, 0x9a, 0xf2, 0x8f, 0x3c, 0x12, 0xe8, 0xd9,
	0xc9, 0x7b, 0xf9, 0xca, 0xd9, 0x23, 0x45, 0xa8, 0x3f, 0x19, 0x9d, 0xc3, 0x15, 0x7f, 0xf6, 0x39,
	0xbc, 0x84, 0xdd, 0x75, 0x9a, 0x2d, 0x90, 0xef, 0xa0, 0x25, 0x91, 0x6a, 0x2b, 0xb9, 0xf6, 0x27,
	0x48, 0x7d, 0x6c, 0xe7, 0xbe, 0xa3, 0xf9, 0x9f, 0x98, 0xba, 0xb0, 0x27, 0x99, 0x3e, 0x84, 0x48,
	0xa8, 0xa4, 0xe7, 0x6d, 0x64, 0xd9, 0xf8, 0x4a, 0xd9, 0x19, 0x40, 0x97, 0xee, 0x80, 0xba, 0xb3,
	0x09, 0x5f, 0x4f, 0xed, 0x69, 0xc8, 0x6b, 0x9c, 0xe2, 0x96, 0x90, 0xdb, 0x99, 0xe7, 0x0a, 0x94,
	0x5f, 0xc4, 0xbf, 0x83, 0x5c, 0xc3, 0x93, 0xb5, 0x0e, 0xa7, 0xb7, 0x69, 0x27, 0xb6, 0x9a, 0xdd,
	0xfd, 0x9c, 0xbb, 0x9f, 0x77, 0x0e, 0x1e, 0x64, 0xf5, 0x1c, 0xdd, 0xc1, 0xf1, 0x5a, 0xaf, 0xf4,
	0x5e, 0x4a, 0x76, 0x19, 0x7a, 0xdd, 0xd5, 0xd0, 0xe7, 0x33, 0x6f, 0x98, 0x35, 0x76, 0x01, 0xcd,
	0x55, 0xff, 0xd2, 0x59, 0xcf, 0xa7, 0xb8, 0x67, 0xef, 0x02, 0x9a, 0xab, 0x26, 0x6e, 0x87, 0x53,
	0x9d, 0xdc, 0x0e, 0x67, 0x57, 0x3e, 0xd3, 0x1f, 0x71, 0x50, 0xa1, 0xdf, 0xe3, 0x8b, 0xdf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xda, 0x9f, 0x17, 0x6e, 0x2c, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookClient is the client API for Book service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookClient interface {
	//  book_basic_info
	FindAllBooksSortedByMonth(ctx context.Context, in *Request, opts ...grpc.CallOption) (*BooksBasicInfoReply, error)
	FindAllBooks(ctx context.Context, in *Request, opts ...grpc.CallOption) (*BooksBasicInfoReply, error)
	FindBooksByLikeName(ctx context.Context, in *BookBasicInfoReq, opts ...grpc.CallOption) (*BooksBasicInfoReply, error)
	FindOneBookById(ctx context.Context, in *BookBasicInfoReq, opts ...grpc.CallOption) (*BookBasicInfoReply, error)
	CreateBook(ctx context.Context, in *BookBasicInfoReq, opts ...grpc.CallOption) (*Reply, error)
	DeleteBook(ctx context.Context, in *BookBasicInfoReq, opts ...grpc.CallOption) (*Reply, error)
	UpdateUser(ctx context.Context, in *BookBasicInfoReq, opts ...grpc.CallOption) (*Reply, error)
	//  book_content
	FindAllBookContentsByBookId(ctx context.Context, in *BookContentReq, opts ...grpc.CallOption) (*BookContentsReply, error)
	FindOneBookContentByBookIdAndChapterNum(ctx context.Context, in *BookContentReq, opts ...grpc.CallOption) (*BookContentReply, error)
	CreateBookContent(ctx context.Context, in *BookContentReq, opts ...grpc.CallOption) (*Reply, error)
	DeleteBookContent(ctx context.Context, in *BookContentReq, opts ...grpc.CallOption) (*Reply, error)
	UpdateBookContent(ctx context.Context, in *BookContentReq, opts ...grpc.CallOption) (*Reply, error)
}

type bookClient struct {
	cc *grpc.ClientConn
}

func NewBookClient(cc *grpc.ClientConn) BookClient {
	return &bookClient{cc}
}

func (c *bookClient) FindAllBooksSortedByMonth(ctx context.Context, in *Request, opts ...grpc.CallOption) (*BooksBasicInfoReply, error) {
	out := new(BooksBasicInfoReply)
	err := c.cc.Invoke(ctx, "/book.Book/FindAllBooksSortedByMonth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) FindAllBooks(ctx context.Context, in *Request, opts ...grpc.CallOption) (*BooksBasicInfoReply, error) {
	out := new(BooksBasicInfoReply)
	err := c.cc.Invoke(ctx, "/book.Book/FindAllBooks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) FindBooksByLikeName(ctx context.Context, in *BookBasicInfoReq, opts ...grpc.CallOption) (*BooksBasicInfoReply, error) {
	out := new(BooksBasicInfoReply)
	err := c.cc.Invoke(ctx, "/book.Book/FindBooksByLikeName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) FindOneBookById(ctx context.Context, in *BookBasicInfoReq, opts ...grpc.CallOption) (*BookBasicInfoReply, error) {
	out := new(BookBasicInfoReply)
	err := c.cc.Invoke(ctx, "/book.Book/FindOneBookById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) CreateBook(ctx context.Context, in *BookBasicInfoReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/book.Book/CreateBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) DeleteBook(ctx context.Context, in *BookBasicInfoReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/book.Book/DeleteBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) UpdateUser(ctx context.Context, in *BookBasicInfoReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/book.Book/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) FindAllBookContentsByBookId(ctx context.Context, in *BookContentReq, opts ...grpc.CallOption) (*BookContentsReply, error) {
	out := new(BookContentsReply)
	err := c.cc.Invoke(ctx, "/book.Book/FindAllBookContentsByBookId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) FindOneBookContentByBookIdAndChapterNum(ctx context.Context, in *BookContentReq, opts ...grpc.CallOption) (*BookContentReply, error) {
	out := new(BookContentReply)
	err := c.cc.Invoke(ctx, "/book.Book/FindOneBookContentByBookIdAndChapterNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) CreateBookContent(ctx context.Context, in *BookContentReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/book.Book/CreateBookContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) DeleteBookContent(ctx context.Context, in *BookContentReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/book.Book/DeleteBookContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) UpdateBookContent(ctx context.Context, in *BookContentReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/book.Book/UpdateBookContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookServer is the server API for Book service.
type BookServer interface {
	//  book_basic_info
	FindAllBooksSortedByMonth(context.Context, *Request) (*BooksBasicInfoReply, error)
	FindAllBooks(context.Context, *Request) (*BooksBasicInfoReply, error)
	FindBooksByLikeName(context.Context, *BookBasicInfoReq) (*BooksBasicInfoReply, error)
	FindOneBookById(context.Context, *BookBasicInfoReq) (*BookBasicInfoReply, error)
	CreateBook(context.Context, *BookBasicInfoReq) (*Reply, error)
	DeleteBook(context.Context, *BookBasicInfoReq) (*Reply, error)
	UpdateUser(context.Context, *BookBasicInfoReq) (*Reply, error)
	//  book_content
	FindAllBookContentsByBookId(context.Context, *BookContentReq) (*BookContentsReply, error)
	FindOneBookContentByBookIdAndChapterNum(context.Context, *BookContentReq) (*BookContentReply, error)
	CreateBookContent(context.Context, *BookContentReq) (*Reply, error)
	DeleteBookContent(context.Context, *BookContentReq) (*Reply, error)
	UpdateBookContent(context.Context, *BookContentReq) (*Reply, error)
}

// UnimplementedBookServer can be embedded to have forward compatible implementations.
type UnimplementedBookServer struct {
}

func (*UnimplementedBookServer) FindAllBooksSortedByMonth(ctx context.Context, req *Request) (*BooksBasicInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllBooksSortedByMonth not implemented")
}
func (*UnimplementedBookServer) FindAllBooks(ctx context.Context, req *Request) (*BooksBasicInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllBooks not implemented")
}
func (*UnimplementedBookServer) FindBooksByLikeName(ctx context.Context, req *BookBasicInfoReq) (*BooksBasicInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindBooksByLikeName not implemented")
}
func (*UnimplementedBookServer) FindOneBookById(ctx context.Context, req *BookBasicInfoReq) (*BookBasicInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOneBookById not implemented")
}
func (*UnimplementedBookServer) CreateBook(ctx context.Context, req *BookBasicInfoReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBook not implemented")
}
func (*UnimplementedBookServer) DeleteBook(ctx context.Context, req *BookBasicInfoReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBook not implemented")
}
func (*UnimplementedBookServer) UpdateUser(ctx context.Context, req *BookBasicInfoReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedBookServer) FindAllBookContentsByBookId(ctx context.Context, req *BookContentReq) (*BookContentsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllBookContentsByBookId not implemented")
}
func (*UnimplementedBookServer) FindOneBookContentByBookIdAndChapterNum(ctx context.Context, req *BookContentReq) (*BookContentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOneBookContentByBookIdAndChapterNum not implemented")
}
func (*UnimplementedBookServer) CreateBookContent(ctx context.Context, req *BookContentReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBookContent not implemented")
}
func (*UnimplementedBookServer) DeleteBookContent(ctx context.Context, req *BookContentReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBookContent not implemented")
}
func (*UnimplementedBookServer) UpdateBookContent(ctx context.Context, req *BookContentReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBookContent not implemented")
}

func RegisterBookServer(s *grpc.Server, srv BookServer) {
	s.RegisterService(&_Book_serviceDesc, srv)
}

func _Book_FindAllBooksSortedByMonth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).FindAllBooksSortedByMonth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/FindAllBooksSortedByMonth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).FindAllBooksSortedByMonth(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_FindAllBooks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).FindAllBooks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/FindAllBooks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).FindAllBooks(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_FindBooksByLikeName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookBasicInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).FindBooksByLikeName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/FindBooksByLikeName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).FindBooksByLikeName(ctx, req.(*BookBasicInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_FindOneBookById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookBasicInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).FindOneBookById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/FindOneBookById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).FindOneBookById(ctx, req.(*BookBasicInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_CreateBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookBasicInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).CreateBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/CreateBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).CreateBook(ctx, req.(*BookBasicInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_DeleteBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookBasicInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).DeleteBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/DeleteBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).DeleteBook(ctx, req.(*BookBasicInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookBasicInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).UpdateUser(ctx, req.(*BookBasicInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_FindAllBookContentsByBookId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookContentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).FindAllBookContentsByBookId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/FindAllBookContentsByBookId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).FindAllBookContentsByBookId(ctx, req.(*BookContentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_FindOneBookContentByBookIdAndChapterNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookContentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).FindOneBookContentByBookIdAndChapterNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/FindOneBookContentByBookIdAndChapterNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).FindOneBookContentByBookIdAndChapterNum(ctx, req.(*BookContentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_CreateBookContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookContentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).CreateBookContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/CreateBookContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).CreateBookContent(ctx, req.(*BookContentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_DeleteBookContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookContentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).DeleteBookContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/DeleteBookContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).DeleteBookContent(ctx, req.(*BookContentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_UpdateBookContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookContentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).UpdateBookContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/UpdateBookContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).UpdateBookContent(ctx, req.(*BookContentReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Book_serviceDesc = grpc.ServiceDesc{
	ServiceName: "book.Book",
	HandlerType: (*BookServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindAllBooksSortedByMonth",
			Handler:    _Book_FindAllBooksSortedByMonth_Handler,
		},
		{
			MethodName: "FindAllBooks",
			Handler:    _Book_FindAllBooks_Handler,
		},
		{
			MethodName: "FindBooksByLikeName",
			Handler:    _Book_FindBooksByLikeName_Handler,
		},
		{
			MethodName: "FindOneBookById",
			Handler:    _Book_FindOneBookById_Handler,
		},
		{
			MethodName: "CreateBook",
			Handler:    _Book_CreateBook_Handler,
		},
		{
			MethodName: "DeleteBook",
			Handler:    _Book_DeleteBook_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Book_UpdateUser_Handler,
		},
		{
			MethodName: "FindAllBookContentsByBookId",
			Handler:    _Book_FindAllBookContentsByBookId_Handler,
		},
		{
			MethodName: "FindOneBookContentByBookIdAndChapterNum",
			Handler:    _Book_FindOneBookContentByBookIdAndChapterNum_Handler,
		},
		{
			MethodName: "CreateBookContent",
			Handler:    _Book_CreateBookContent_Handler,
		},
		{
			MethodName: "DeleteBookContent",
			Handler:    _Book_DeleteBookContent_Handler,
		},
		{
			MethodName: "UpdateBookContent",
			Handler:    _Book_UpdateBookContent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "book.proto",
}
