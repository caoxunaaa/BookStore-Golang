// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"User/internal/logic"
	"User/internal/svc"
	"User/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) FindOneUserById(ctx context.Context, in *user.IdReq) (*user.UserInfoReply, error) {
	l := logic.NewFindOneUserByIdLogic(ctx, s.svcCtx)
	return l.FindOneUserById(in)
}

func (s *UserServer) FindAllUser(ctx context.Context, in *user.Request) (*user.UsersInfoReply, error) {
	l := logic.NewFindAllUserLogic(ctx, s.svcCtx)
	return l.FindAllUser(in)
}

func (s *UserServer) Register(ctx context.Context, in *user.RegisterReq) (*user.Reply, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) Login(ctx context.Context, in *user.LoginReq) (*user.Reply, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) UpdateUser(ctx context.Context, in *user.UpdateUserReq) (*user.Reply, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}
