// Code generated by goctl. DO NOT EDIT!
// Source: order.proto

package orderclient

import (
	"context"

	"Order/order"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	OrderInfoReq   = order.OrderInfoReq
	OrderInfoResp  = order.OrderInfoResp
	OrderInfosResp = order.OrderInfosResp
	Request        = order.Request
	Response       = order.Response

	Order interface {
		GetOrderInfoByOrderNum(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*OrderInfoResp, error)
		GetNotPaidOrderInfoByBuyerId(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*OrderInfoResp, error)
		CreateOrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*Response, error)
		UpdateOrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*Response, error)
		DeleteOrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*Response, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

func (m *defaultOrder) GetOrderInfoByOrderNum(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*OrderInfoResp, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.GetOrderInfoByOrderNum(ctx, in, opts...)
}

func (m *defaultOrder) GetNotPaidOrderInfoByBuyerId(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*OrderInfoResp, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.GetNotPaidOrderInfoByBuyerId(ctx, in, opts...)
}

func (m *defaultOrder) CreateOrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*Response, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.CreateOrderInfo(ctx, in, opts...)
}

func (m *defaultOrder) UpdateOrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*Response, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.UpdateOrderInfo(ctx, in, opts...)
}

func (m *defaultOrder) DeleteOrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*Response, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.DeleteOrderInfo(ctx, in, opts...)
}
