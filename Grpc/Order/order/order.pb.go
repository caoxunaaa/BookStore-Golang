// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package order

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Ping                 string   `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

type Response struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type OrderGoods struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderNum             string   `protobuf:"bytes,2,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	BookId               int64    `protobuf:"varint,3,opt,name=bookId,proto3" json:"bookId,omitempty"`
	Count                int64    `protobuf:"varint,4,opt,name=Count,proto3" json:"Count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderGoods) Reset()         { *m = OrderGoods{} }
func (m *OrderGoods) String() string { return proto.CompactTextString(m) }
func (*OrderGoods) ProtoMessage()    {}
func (*OrderGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *OrderGoods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderGoods.Unmarshal(m, b)
}
func (m *OrderGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderGoods.Marshal(b, m, deterministic)
}
func (m *OrderGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderGoods.Merge(m, src)
}
func (m *OrderGoods) XXX_Size() int {
	return xxx_messageInfo_OrderGoods.Size(m)
}
func (m *OrderGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderGoods.DiscardUnknown(m)
}

var xxx_messageInfo_OrderGoods proto.InternalMessageInfo

func (m *OrderGoods) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrderGoods) GetOrderNum() string {
	if m != nil {
		return m.OrderNum
	}
	return ""
}

func (m *OrderGoods) GetBookId() int64 {
	if m != nil {
		return m.BookId
	}
	return 0
}

func (m *OrderGoods) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type OrderInfoReq struct {
	Id                   int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BuyerId              int64         `protobuf:"varint,2,opt,name=buyerId,proto3" json:"buyerId,omitempty"`
	OrderNum             string        `protobuf:"bytes,3,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	CreateTime           string        `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Cost                 int64         `protobuf:"varint,5,opt,name=cost,proto3" json:"cost,omitempty"`
	IsPaid               bool          `protobuf:"varint,6,opt,name=isPaid,proto3" json:"isPaid,omitempty"`
	OrderStatus          string        `protobuf:"bytes,7,opt,name=orderStatus,proto3" json:"orderStatus,omitempty"`
	Goods                []*OrderGoods `protobuf:"bytes,8,rep,name=goods,proto3" json:"goods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrderInfoReq) Reset()         { *m = OrderInfoReq{} }
func (m *OrderInfoReq) String() string { return proto.CompactTextString(m) }
func (*OrderInfoReq) ProtoMessage()    {}
func (*OrderInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3}
}

func (m *OrderInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderInfoReq.Unmarshal(m, b)
}
func (m *OrderInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderInfoReq.Marshal(b, m, deterministic)
}
func (m *OrderInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderInfoReq.Merge(m, src)
}
func (m *OrderInfoReq) XXX_Size() int {
	return xxx_messageInfo_OrderInfoReq.Size(m)
}
func (m *OrderInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_OrderInfoReq proto.InternalMessageInfo

func (m *OrderInfoReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrderInfoReq) GetBuyerId() int64 {
	if m != nil {
		return m.BuyerId
	}
	return 0
}

func (m *OrderInfoReq) GetOrderNum() string {
	if m != nil {
		return m.OrderNum
	}
	return ""
}

func (m *OrderInfoReq) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *OrderInfoReq) GetCost() int64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *OrderInfoReq) GetIsPaid() bool {
	if m != nil {
		return m.IsPaid
	}
	return false
}

func (m *OrderInfoReq) GetOrderStatus() string {
	if m != nil {
		return m.OrderStatus
	}
	return ""
}

func (m *OrderInfoReq) GetGoods() []*OrderGoods {
	if m != nil {
		return m.Goods
	}
	return nil
}

type OrderInfoResp struct {
	Id                   int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BuyerId              int64         `protobuf:"varint,2,opt,name=buyerId,proto3" json:"buyerId,omitempty"`
	OrderNum             string        `protobuf:"bytes,3,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	CreateTime           string        `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Cost                 int64         `protobuf:"varint,5,opt,name=cost,proto3" json:"cost,omitempty"`
	IsPaid               bool          `protobuf:"varint,6,opt,name=isPaid,proto3" json:"isPaid,omitempty"`
	OrderStatus          string        `protobuf:"bytes,7,opt,name=orderStatus,proto3" json:"orderStatus,omitempty"`
	Goods                []*OrderGoods `protobuf:"bytes,8,rep,name=goods,proto3" json:"goods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrderInfoResp) Reset()         { *m = OrderInfoResp{} }
func (m *OrderInfoResp) String() string { return proto.CompactTextString(m) }
func (*OrderInfoResp) ProtoMessage()    {}
func (*OrderInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{4}
}

func (m *OrderInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderInfoResp.Unmarshal(m, b)
}
func (m *OrderInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderInfoResp.Marshal(b, m, deterministic)
}
func (m *OrderInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderInfoResp.Merge(m, src)
}
func (m *OrderInfoResp) XXX_Size() int {
	return xxx_messageInfo_OrderInfoResp.Size(m)
}
func (m *OrderInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_OrderInfoResp proto.InternalMessageInfo

func (m *OrderInfoResp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrderInfoResp) GetBuyerId() int64 {
	if m != nil {
		return m.BuyerId
	}
	return 0
}

func (m *OrderInfoResp) GetOrderNum() string {
	if m != nil {
		return m.OrderNum
	}
	return ""
}

func (m *OrderInfoResp) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *OrderInfoResp) GetCost() int64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *OrderInfoResp) GetIsPaid() bool {
	if m != nil {
		return m.IsPaid
	}
	return false
}

func (m *OrderInfoResp) GetOrderStatus() string {
	if m != nil {
		return m.OrderStatus
	}
	return ""
}

func (m *OrderInfoResp) GetGoods() []*OrderGoods {
	if m != nil {
		return m.Goods
	}
	return nil
}

type OrderInfosResp struct {
	OrderInfos           []*OrderInfoResp `protobuf:"bytes,1,rep,name=OrderInfos,proto3" json:"OrderInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OrderInfosResp) Reset()         { *m = OrderInfosResp{} }
func (m *OrderInfosResp) String() string { return proto.CompactTextString(m) }
func (*OrderInfosResp) ProtoMessage()    {}
func (*OrderInfosResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{5}
}

func (m *OrderInfosResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderInfosResp.Unmarshal(m, b)
}
func (m *OrderInfosResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderInfosResp.Marshal(b, m, deterministic)
}
func (m *OrderInfosResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderInfosResp.Merge(m, src)
}
func (m *OrderInfosResp) XXX_Size() int {
	return xxx_messageInfo_OrderInfosResp.Size(m)
}
func (m *OrderInfosResp) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderInfosResp.DiscardUnknown(m)
}

var xxx_messageInfo_OrderInfosResp proto.InternalMessageInfo

func (m *OrderInfosResp) GetOrderInfos() []*OrderInfoResp {
	if m != nil {
		return m.OrderInfos
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "order.Request")
	proto.RegisterType((*Response)(nil), "order.Response")
	proto.RegisterType((*OrderGoods)(nil), "order.OrderGoods")
	proto.RegisterType((*OrderInfoReq)(nil), "order.OrderInfoReq")
	proto.RegisterType((*OrderInfoResp)(nil), "order.OrderInfoResp")
	proto.RegisterType((*OrderInfosResp)(nil), "order.OrderInfosResp")
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077) }

var fileDescriptor_cd01338c35d87077 = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x53, 0x4d, 0x4f, 0xc2, 0x40,
	0x10, 0x4d, 0x5b, 0x4a, 0xcb, 0xa0, 0x10, 0x57, 0x42, 0x36, 0x24, 0x1a, 0xd2, 0x8b, 0x9c, 0x38,
	0x20, 0x09, 0x77, 0x48, 0x24, 0x5c, 0xc4, 0xac, 0x7a, 0xf1, 0x56, 0xd8, 0x85, 0x34, 0x84, 0x6e,
	0xe9, 0x6e, 0x0f, 0xfc, 0x39, 0xff, 0x90, 0xfe, 0x08, 0xd3, 0xe9, 0x87, 0x55, 0xb8, 0x78, 0xf5,
	0xb6, 0xef, 0xed, 0xbe, 0x79, 0x33, 0xaf, 0x1d, 0x68, 0xca, 0x98, 0x8b, 0x78, 0x18, 0xc5, 0x52,
	0x4b, 0x62, 0x23, 0xf0, 0x6e, 0xc0, 0x61, 0xe2, 0x90, 0x08, 0xa5, 0x09, 0x81, 0x5a, 0x14, 0x84,
	0x5b, 0x6a, 0xf4, 0x8d, 0x41, 0x83, 0xe1, 0xd9, 0x1b, 0x83, 0xcb, 0x84, 0x8a, 0x64, 0xa8, 0x04,
	0x69, 0x81, 0x29, 0x77, 0x78, 0xeb, 0x32, 0x53, 0xee, 0x08, 0x05, 0x67, 0x2f, 0x94, 0xf2, 0xb7,
	0x82, 0x9a, 0x28, 0x29, 0xa0, 0xb7, 0x01, 0x58, 0xa6, 0xd5, 0xe7, 0x52, 0x72, 0x95, 0xea, 0x02,
	0x8e, 0x3a, 0x8b, 0x99, 0x01, 0x27, 0x3d, 0x70, 0xd1, 0xfb, 0x31, 0xd9, 0xe7, 0xc2, 0x12, 0x93,
	0x2e, 0xd4, 0x57, 0x52, 0xee, 0x16, 0x9c, 0x5a, 0xf8, 0x3e, 0x47, 0xa4, 0x03, 0xf6, 0x4c, 0x26,
	0xa1, 0xa6, 0x35, 0xa4, 0x33, 0xe0, 0x7d, 0x18, 0x70, 0x81, 0x46, 0x8b, 0x70, 0x23, 0x99, 0x38,
	0x9c, 0x58, 0x51, 0x70, 0x56, 0xc9, 0x51, 0xc4, 0x0b, 0x8e, 0x4e, 0x16, 0x2b, 0xe0, 0x8f, 0x26,
	0xac, 0x5f, 0x4d, 0xdc, 0x02, 0xac, 0x63, 0xe1, 0x6b, 0xf1, 0x12, 0xec, 0x05, 0x3a, 0x36, 0x58,
	0x85, 0x49, 0x83, 0x5a, 0x4b, 0xa5, 0xa9, 0x8d, 0x25, 0xf1, 0x9c, 0x36, 0x1e, 0xa8, 0x27, 0x3f,
	0xe0, 0xb4, 0x8e, 0x01, 0xe5, 0x88, 0xf4, 0xf3, 0xd4, 0x9f, 0xb5, 0xaf, 0x13, 0x45, 0x1d, 0x2c,
	0x56, 0xa5, 0xc8, 0x1d, 0xd8, 0xdb, 0x34, 0x27, 0xea, 0xf6, 0xad, 0x41, 0x73, 0x74, 0x35, 0xcc,
	0xbe, 0xd2, 0x77, 0x80, 0x2c, 0xbb, 0xf7, 0x3e, 0x0d, 0xb8, 0xac, 0x4c, 0xab, 0xa2, 0xff, 0x3d,
	0xee, 0x03, 0xb4, 0xca, 0x69, 0x15, 0x8e, 0x3b, 0xce, 0x7f, 0x2b, 0x64, 0xa8, 0x81, 0xfa, 0x4e,
	0x55, 0x5f, 0x04, 0xc3, 0x2a, 0xef, 0x46, 0xef, 0x06, 0xd8, 0x08, 0xc9, 0x0c, 0xba, 0x73, 0xa1,
	0xcb, 0xab, 0xe9, 0x71, 0x59, 0x44, 0x70, 0x7d, 0x5a, 0xe5, 0xd0, 0x3b, 0x5b, 0x9a, 0x4c, 0xa0,
	0x3d, 0xc3, 0x6c, 0x4a, 0xfa, 0xbc, 0xba, 0x9d, 0x93, 0xe5, 0xfa, 0x4c, 0xa0, 0xfd, 0x1a, 0xf1,
	0xbf, 0x0b, 0xa7, 0xce, 0x5b, 0xb6, 0xab, 0xab, 0x3a, 0x6e, 0xee, 0xfd, 0x57, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x5e, 0x50, 0xad, 0x5c, 0xc8, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderClient is the client API for Order service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderClient interface {
	GetOrderInfoByOrderNum(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*OrderInfoResp, error)
	CreateOrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*Response, error)
	UpdateOrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*Response, error)
}

type orderClient struct {
	cc *grpc.ClientConn
}

func NewOrderClient(cc *grpc.ClientConn) OrderClient {
	return &orderClient{cc}
}

func (c *orderClient) GetOrderInfoByOrderNum(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*OrderInfoResp, error) {
	out := new(OrderInfoResp)
	err := c.cc.Invoke(ctx, "/order.Order/GetOrderInfoByOrderNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) CreateOrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/order.Order/CreateOrderInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) UpdateOrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/order.Order/UpdateOrderInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServer is the server API for Order service.
type OrderServer interface {
	GetOrderInfoByOrderNum(context.Context, *OrderInfoReq) (*OrderInfoResp, error)
	CreateOrderInfo(context.Context, *OrderInfoReq) (*Response, error)
	UpdateOrderInfo(context.Context, *OrderInfoReq) (*Response, error)
}

// UnimplementedOrderServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServer struct {
}

func (*UnimplementedOrderServer) GetOrderInfoByOrderNum(ctx context.Context, req *OrderInfoReq) (*OrderInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderInfoByOrderNum not implemented")
}
func (*UnimplementedOrderServer) CreateOrderInfo(ctx context.Context, req *OrderInfoReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrderInfo not implemented")
}
func (*UnimplementedOrderServer) UpdateOrderInfo(ctx context.Context, req *OrderInfoReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrderInfo not implemented")
}

func RegisterOrderServer(s *grpc.Server, srv OrderServer) {
	s.RegisterService(&_Order_serviceDesc, srv)
}

func _Order_GetOrderInfoByOrderNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).GetOrderInfoByOrderNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Order/GetOrderInfoByOrderNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).GetOrderInfoByOrderNum(ctx, req.(*OrderInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_CreateOrderInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).CreateOrderInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Order/CreateOrderInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).CreateOrderInfo(ctx, req.(*OrderInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Order_UpdateOrderInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).UpdateOrderInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Order/UpdateOrderInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).UpdateOrderInfo(ctx, req.(*OrderInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Order_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order.Order",
	HandlerType: (*OrderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrderInfoByOrderNum",
			Handler:    _Order_GetOrderInfoByOrderNum_Handler,
		},
		{
			MethodName: "CreateOrderInfo",
			Handler:    _Order_CreateOrderInfo_Handler,
		},
		{
			MethodName: "UpdateOrderInfo",
			Handler:    _Order_UpdateOrderInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}
