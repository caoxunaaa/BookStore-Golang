// Code generated by goctl. DO NOT EDIT!
// Source: book.proto

package server

import (
	"context"

	"Book/book"
	"Book/internal/logic"
	"Book/internal/svc"
)

type BookServer struct {
	svcCtx *svc.ServiceContext
}

func NewBookServer(svcCtx *svc.ServiceContext) *BookServer {
	return &BookServer{
		svcCtx: svcCtx,
	}
}

func (s *BookServer) FindAllBooksSortedByMonth(ctx context.Context, in *book.Request) (*book.BooksBasicInfoReply, error) {
	l := logic.NewFindAllBooksSortedByMonthLogic(ctx, s.svcCtx)
	return l.FindAllBooksSortedByMonth(in)
}

func (s *BookServer) FindAllBooks(ctx context.Context, in *book.Request) (*book.BooksBasicInfoReply, error) {
	l := logic.NewFindAllBooksLogic(ctx, s.svcCtx)
	return l.FindAllBooks(in)
}

func (s *BookServer) FindBooksByLikeName(ctx context.Context, in *book.BookBasicInfoReq) (*book.BooksBasicInfoReply, error) {
	l := logic.NewFindBooksByLikeNameLogic(ctx, s.svcCtx)
	return l.FindBooksByLikeName(in)
}

func (s *BookServer) FindOneBookById(ctx context.Context, in *book.BookBasicInfoReq) (*book.BookBasicInfoReply, error) {
	l := logic.NewFindOneBookByIdLogic(ctx, s.svcCtx)
	return l.FindOneBookById(in)
}

func (s *BookServer) CreateBook(ctx context.Context, in *book.BookBasicInfoReq) (*book.Reply, error) {
	l := logic.NewCreateBookLogic(ctx, s.svcCtx)
	return l.CreateBook(in)
}

func (s *BookServer) DeleteBook(ctx context.Context, in *book.BookBasicInfoReq) (*book.Reply, error) {
	l := logic.NewDeleteBookLogic(ctx, s.svcCtx)
	return l.DeleteBook(in)
}

func (s *BookServer) UpdateUser(ctx context.Context, in *book.BookBasicInfoReq) (*book.Reply, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}
